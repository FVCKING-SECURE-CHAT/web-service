// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id         String     @id @default(cuid())
  name       String?
  email      String?
  phone      String?
  username   String     @unique
  password   String
  created_at DateTime   @default(now())
  updated_at DateTime   @default(now()) @updatedAt
  sessions   sessions[]
}

model sessions {
  id         String   @id @default(cuid())
  user_id    String
  payload    Json     @default("{}")
  user       users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
}

enum MESSAGE_TYPES {
  TEST
  VIDEO
  GIF
  IMAGE
}

model chats {
  id         String     @id @default(cuid()) // 
  from       String?
  to         String?
  name       String     @default("")
  desc       String     @default("")
  type       String // basic, group, channel
  created_at DateTime   @default(now())
  updated_at DateTime   @default(now()) @updatedAt
  messages   messages[]
}

model messages {
  id                      String        @id @default(cuid()) // 
  message_type            MESSAGE_TYPES
  content                 String        @db.Text()
  is_deleted_for_sender   Boolean
  is_deleted_for_receiver Boolean
  chat_id                 String
  created_at              DateTime      @default(now())
  updated_at              DateTime      @default(now()) @updatedAt
  chat                    chats         @relation(fields: [chat_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
}
